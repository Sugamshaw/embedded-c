
Test1_Q1_Nucleo_F446RE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001f8  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003bc  080003c4  000013c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003bc  080003bc  000013c4  2**0
                  CONTENTS
  4 .ARM          00000000  080003bc  080003bc  000013c4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003bc  080003c4  000013c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003bc  080003bc  000013bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080003c0  080003c0  000013c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000013c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080003c4  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080003c4  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000013c4  2**0
                  CONTENTS, READONLY
 12 .debug_info   000001d3  00000000  00000000  000013ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000013b  00000000  00000000  000015c1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000058  00000000  00000000  00001700  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000039  00000000  00000000  00001758  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f88  00000000  00000000  00001791  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000004a4  00000000  00000000  00002719  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003cd2  00000000  00000000  00002bbd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000688f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000ac  00000000  00000000  000068d4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000077  00000000  00000000  00006980  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080003a4 	.word	0x080003a4

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080003a4 	.word	0x080003a4

08000204 <GPIOA_Init>:
} GPIO_TypeDef;

#define GPIOA_BASE				(0x40020000)
#define GPIOA					((GPIO_TypeDef *)GPIOA_BASE)

void GPIOA_Init(uint32_t pin) {
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
	*RCC |= (1 << 0);
 800020c:	4b1b      	ldr	r3, [pc, #108]	@ (800027c <GPIOA_Init+0x78>)
 800020e:	681b      	ldr	r3, [r3, #0]
 8000210:	4a1a      	ldr	r2, [pc, #104]	@ (800027c <GPIOA_Init+0x78>)
 8000212:	f043 0301 	orr.w	r3, r3, #1
 8000216:	6013      	str	r3, [r2, #0]

	GPIOA->MODER |= (1 << (2 * pin));
 8000218:	4b19      	ldr	r3, [pc, #100]	@ (8000280 <GPIOA_Init+0x7c>)
 800021a:	681b      	ldr	r3, [r3, #0]
 800021c:	687a      	ldr	r2, [r7, #4]
 800021e:	0052      	lsls	r2, r2, #1
 8000220:	2101      	movs	r1, #1
 8000222:	fa01 f202 	lsl.w	r2, r1, r2
 8000226:	4611      	mov	r1, r2
 8000228:	4a15      	ldr	r2, [pc, #84]	@ (8000280 <GPIOA_Init+0x7c>)
 800022a:	430b      	orrs	r3, r1
 800022c:	6013      	str	r3, [r2, #0]
	GPIOA->OTYPER &= ~(1 << pin);
 800022e:	4b14      	ldr	r3, [pc, #80]	@ (8000280 <GPIOA_Init+0x7c>)
 8000230:	685b      	ldr	r3, [r3, #4]
 8000232:	2101      	movs	r1, #1
 8000234:	687a      	ldr	r2, [r7, #4]
 8000236:	fa01 f202 	lsl.w	r2, r1, r2
 800023a:	43d2      	mvns	r2, r2
 800023c:	4611      	mov	r1, r2
 800023e:	4a10      	ldr	r2, [pc, #64]	@ (8000280 <GPIOA_Init+0x7c>)
 8000240:	400b      	ands	r3, r1
 8000242:	6053      	str	r3, [r2, #4]
	GPIOA->OSPEEDR |= (3 << (2 * pin));
 8000244:	4b0e      	ldr	r3, [pc, #56]	@ (8000280 <GPIOA_Init+0x7c>)
 8000246:	689b      	ldr	r3, [r3, #8]
 8000248:	687a      	ldr	r2, [r7, #4]
 800024a:	0052      	lsls	r2, r2, #1
 800024c:	2103      	movs	r1, #3
 800024e:	fa01 f202 	lsl.w	r2, r1, r2
 8000252:	4611      	mov	r1, r2
 8000254:	4a0a      	ldr	r2, [pc, #40]	@ (8000280 <GPIOA_Init+0x7c>)
 8000256:	430b      	orrs	r3, r1
 8000258:	6093      	str	r3, [r2, #8]
	GPIOA->PUPDR |= (2 << (2 * pin));
 800025a:	4b09      	ldr	r3, [pc, #36]	@ (8000280 <GPIOA_Init+0x7c>)
 800025c:	68db      	ldr	r3, [r3, #12]
 800025e:	687a      	ldr	r2, [r7, #4]
 8000260:	0052      	lsls	r2, r2, #1
 8000262:	2102      	movs	r1, #2
 8000264:	fa01 f202 	lsl.w	r2, r1, r2
 8000268:	4611      	mov	r1, r2
 800026a:	4a05      	ldr	r2, [pc, #20]	@ (8000280 <GPIOA_Init+0x7c>)
 800026c:	430b      	orrs	r3, r1
 800026e:	60d3      	str	r3, [r2, #12]
}
 8000270:	bf00      	nop
 8000272:	370c      	adds	r7, #12
 8000274:	46bd      	mov	sp, r7
 8000276:	bc80      	pop	{r7}
 8000278:	4770      	bx	lr
 800027a:	bf00      	nop
 800027c:	40023830 	.word	0x40023830
 8000280:	40020000 	.word	0x40020000

08000284 <delay>:

void delay(uint32_t time) {
 8000284:	b480      	push	{r7}
 8000286:	b085      	sub	sp, #20
 8000288:	af00      	add	r7, sp, #0
 800028a:	6078      	str	r0, [r7, #4]
	for (uint32_t i = 0u; i < (500000 * time); i++);
 800028c:	2300      	movs	r3, #0
 800028e:	60fb      	str	r3, [r7, #12]
 8000290:	e002      	b.n	8000298 <delay+0x14>
 8000292:	68fb      	ldr	r3, [r7, #12]
 8000294:	3301      	adds	r3, #1
 8000296:	60fb      	str	r3, [r7, #12]
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	4a06      	ldr	r2, [pc, #24]	@ (80002b4 <delay+0x30>)
 800029c:	fb02 f303 	mul.w	r3, r2, r3
 80002a0:	68fa      	ldr	r2, [r7, #12]
 80002a2:	429a      	cmp	r2, r3
 80002a4:	d3f5      	bcc.n	8000292 <delay+0xe>
}
 80002a6:	bf00      	nop
 80002a8:	bf00      	nop
 80002aa:	3714      	adds	r7, #20
 80002ac:	46bd      	mov	sp, r7
 80002ae:	bc80      	pop	{r7}
 80002b0:	4770      	bx	lr
 80002b2:	bf00      	nop
 80002b4:	0007a120 	.word	0x0007a120

080002b8 <main>:



int main(void)
{
 80002b8:	b580      	push	{r7, lr}
 80002ba:	b082      	sub	sp, #8
 80002bc:	af00      	add	r7, sp, #0
	uint32_t pin = 0;
 80002be:	2300      	movs	r3, #0
 80002c0:	607b      	str	r3, [r7, #4]
	GPIOA_Init(pin);
 80002c2:	6878      	ldr	r0, [r7, #4]
 80002c4:	f7ff ff9e 	bl	8000204 <GPIOA_Init>
    /* Loop forever */
	for(;;) {
		GPIOA->ODR |= (1 << pin);
 80002c8:	4b0e      	ldr	r3, [pc, #56]	@ (8000304 <main+0x4c>)
 80002ca:	695b      	ldr	r3, [r3, #20]
 80002cc:	2101      	movs	r1, #1
 80002ce:	687a      	ldr	r2, [r7, #4]
 80002d0:	fa01 f202 	lsl.w	r2, r1, r2
 80002d4:	4611      	mov	r1, r2
 80002d6:	4a0b      	ldr	r2, [pc, #44]	@ (8000304 <main+0x4c>)
 80002d8:	430b      	orrs	r3, r1
 80002da:	6153      	str	r3, [r2, #20]
		delay(5u);
 80002dc:	2005      	movs	r0, #5
 80002de:	f7ff ffd1 	bl	8000284 <delay>
		GPIOA->ODR &= ~(1 << pin);
 80002e2:	4b08      	ldr	r3, [pc, #32]	@ (8000304 <main+0x4c>)
 80002e4:	695b      	ldr	r3, [r3, #20]
 80002e6:	2101      	movs	r1, #1
 80002e8:	687a      	ldr	r2, [r7, #4]
 80002ea:	fa01 f202 	lsl.w	r2, r1, r2
 80002ee:	43d2      	mvns	r2, r2
 80002f0:	4611      	mov	r1, r2
 80002f2:	4a04      	ldr	r2, [pc, #16]	@ (8000304 <main+0x4c>)
 80002f4:	400b      	ands	r3, r1
 80002f6:	6153      	str	r3, [r2, #20]
		delay(1u);
 80002f8:	2001      	movs	r0, #1
 80002fa:	f7ff ffc3 	bl	8000284 <delay>
		GPIOA->ODR |= (1 << pin);
 80002fe:	bf00      	nop
 8000300:	e7e2      	b.n	80002c8 <main+0x10>
 8000302:	bf00      	nop
 8000304:	40020000 	.word	0x40020000

08000308 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000308:	480d      	ldr	r0, [pc, #52]	@ (8000340 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800030a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800030c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000310:	480c      	ldr	r0, [pc, #48]	@ (8000344 <LoopForever+0x6>)
  ldr r1, =_edata
 8000312:	490d      	ldr	r1, [pc, #52]	@ (8000348 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000314:	4a0d      	ldr	r2, [pc, #52]	@ (800034c <LoopForever+0xe>)
  movs r3, #0
 8000316:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000318:	e002      	b.n	8000320 <LoopCopyDataInit>

0800031a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800031a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800031c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800031e:	3304      	adds	r3, #4

08000320 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000320:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000322:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000324:	d3f9      	bcc.n	800031a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000326:	4a0a      	ldr	r2, [pc, #40]	@ (8000350 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000328:	4c0a      	ldr	r4, [pc, #40]	@ (8000354 <LoopForever+0x16>)
  movs r3, #0
 800032a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800032c:	e001      	b.n	8000332 <LoopFillZerobss>

0800032e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800032e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000330:	3204      	adds	r2, #4

08000332 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000332:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000334:	d3fb      	bcc.n	800032e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000336:	f000 f811 	bl	800035c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800033a:	f7ff ffbd 	bl	80002b8 <main>

0800033e <LoopForever>:

LoopForever:
  b LoopForever
 800033e:	e7fe      	b.n	800033e <LoopForever>
  ldr   r0, =_estack
 8000340:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000344:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000348:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800034c:	080003c4 	.word	0x080003c4
  ldr r2, =_sbss
 8000350:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000354:	2000001c 	.word	0x2000001c

08000358 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000358:	e7fe      	b.n	8000358 <ADC_IRQHandler>
	...

0800035c <__libc_init_array>:
 800035c:	b570      	push	{r4, r5, r6, lr}
 800035e:	4d0d      	ldr	r5, [pc, #52]	@ (8000394 <__libc_init_array+0x38>)
 8000360:	4c0d      	ldr	r4, [pc, #52]	@ (8000398 <__libc_init_array+0x3c>)
 8000362:	1b64      	subs	r4, r4, r5
 8000364:	10a4      	asrs	r4, r4, #2
 8000366:	2600      	movs	r6, #0
 8000368:	42a6      	cmp	r6, r4
 800036a:	d109      	bne.n	8000380 <__libc_init_array+0x24>
 800036c:	4d0b      	ldr	r5, [pc, #44]	@ (800039c <__libc_init_array+0x40>)
 800036e:	4c0c      	ldr	r4, [pc, #48]	@ (80003a0 <__libc_init_array+0x44>)
 8000370:	f000 f818 	bl	80003a4 <_init>
 8000374:	1b64      	subs	r4, r4, r5
 8000376:	10a4      	asrs	r4, r4, #2
 8000378:	2600      	movs	r6, #0
 800037a:	42a6      	cmp	r6, r4
 800037c:	d105      	bne.n	800038a <__libc_init_array+0x2e>
 800037e:	bd70      	pop	{r4, r5, r6, pc}
 8000380:	f855 3b04 	ldr.w	r3, [r5], #4
 8000384:	4798      	blx	r3
 8000386:	3601      	adds	r6, #1
 8000388:	e7ee      	b.n	8000368 <__libc_init_array+0xc>
 800038a:	f855 3b04 	ldr.w	r3, [r5], #4
 800038e:	4798      	blx	r3
 8000390:	3601      	adds	r6, #1
 8000392:	e7f2      	b.n	800037a <__libc_init_array+0x1e>
 8000394:	080003bc 	.word	0x080003bc
 8000398:	080003bc 	.word	0x080003bc
 800039c:	080003bc 	.word	0x080003bc
 80003a0:	080003c0 	.word	0x080003c0

080003a4 <_init>:
 80003a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003a6:	bf00      	nop
 80003a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003aa:	bc08      	pop	{r3}
 80003ac:	469e      	mov	lr, r3
 80003ae:	4770      	bx	lr

080003b0 <_fini>:
 80003b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003b2:	bf00      	nop
 80003b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003b6:	bc08      	pop	{r3}
 80003b8:	469e      	mov	lr, r3
 80003ba:	4770      	bx	lr
