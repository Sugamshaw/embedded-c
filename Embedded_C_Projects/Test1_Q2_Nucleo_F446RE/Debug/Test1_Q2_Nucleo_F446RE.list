
Test1_Q2_Nucleo_F446RE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000294  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000458  08000460  00001460  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000458  08000458  00001460  2**0
                  CONTENTS
  4 .ARM          00000000  08000458  08000458  00001460  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000458  08000460  00001460  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000458  08000458  00001458  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800045c  0800045c  0000145c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001460  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000460  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000460  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00001460  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000203  00000000  00000000  0000148a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000014a  00000000  00000000  0000168d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000058  00000000  00000000  000017d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000039  00000000  00000000  00001830  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f94  00000000  00000000  00001869  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000004e9  00000000  00000000  000027fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003d29  00000000  00000000  00002ce6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00006a0f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000ac  00000000  00000000  00006a54  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000077  00000000  00000000  00006b00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000440 	.word	0x08000440

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000440 	.word	0x08000440

08000204 <GPIOA_Init>:
#define GPIOA_BASE				(0x40020000)
#define GPIOC_BASE				(0x40020800)
#define GPIOA					((__IO GPIO_TypeDef *) GPIOA_BASE)
#define GPIOC					((__IO GPIO_TypeDef *) GPIOC_BASE)

void GPIOA_Init(uint32_t pin) {
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
	*RCC |= (1U << 0);
 800020c:	4b19      	ldr	r3, [pc, #100]	@ (8000274 <GPIOA_Init+0x70>)
 800020e:	681b      	ldr	r3, [r3, #0]
 8000210:	4a18      	ldr	r2, [pc, #96]	@ (8000274 <GPIOA_Init+0x70>)
 8000212:	f043 0301 	orr.w	r3, r3, #1
 8000216:	6013      	str	r3, [r2, #0]

	GPIOA->MODER |= (1U << (2 * pin));
 8000218:	4b17      	ldr	r3, [pc, #92]	@ (8000278 <GPIOA_Init+0x74>)
 800021a:	681a      	ldr	r2, [r3, #0]
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	005b      	lsls	r3, r3, #1
 8000220:	2101      	movs	r1, #1
 8000222:	fa01 f303 	lsl.w	r3, r1, r3
 8000226:	4914      	ldr	r1, [pc, #80]	@ (8000278 <GPIOA_Init+0x74>)
 8000228:	4313      	orrs	r3, r2
 800022a:	600b      	str	r3, [r1, #0]
	GPIOA->OTYPER &= ~(1U << pin);
 800022c:	4b12      	ldr	r3, [pc, #72]	@ (8000278 <GPIOA_Init+0x74>)
 800022e:	685a      	ldr	r2, [r3, #4]
 8000230:	2101      	movs	r1, #1
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	fa01 f303 	lsl.w	r3, r1, r3
 8000238:	43db      	mvns	r3, r3
 800023a:	490f      	ldr	r1, [pc, #60]	@ (8000278 <GPIOA_Init+0x74>)
 800023c:	4013      	ands	r3, r2
 800023e:	604b      	str	r3, [r1, #4]
	GPIOA->OSPEEDR |= (1U << (2 * pin));
 8000240:	4b0d      	ldr	r3, [pc, #52]	@ (8000278 <GPIOA_Init+0x74>)
 8000242:	689a      	ldr	r2, [r3, #8]
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	005b      	lsls	r3, r3, #1
 8000248:	2101      	movs	r1, #1
 800024a:	fa01 f303 	lsl.w	r3, r1, r3
 800024e:	490a      	ldr	r1, [pc, #40]	@ (8000278 <GPIOA_Init+0x74>)
 8000250:	4313      	orrs	r3, r2
 8000252:	608b      	str	r3, [r1, #8]
	GPIOA->PUPDR |= (2U << (2 * pin));
 8000254:	4b08      	ldr	r3, [pc, #32]	@ (8000278 <GPIOA_Init+0x74>)
 8000256:	68da      	ldr	r2, [r3, #12]
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	005b      	lsls	r3, r3, #1
 800025c:	2102      	movs	r1, #2
 800025e:	fa01 f303 	lsl.w	r3, r1, r3
 8000262:	4905      	ldr	r1, [pc, #20]	@ (8000278 <GPIOA_Init+0x74>)
 8000264:	4313      	orrs	r3, r2
 8000266:	60cb      	str	r3, [r1, #12]
}
 8000268:	bf00      	nop
 800026a:	370c      	adds	r7, #12
 800026c:	46bd      	mov	sp, r7
 800026e:	bc80      	pop	{r7}
 8000270:	4770      	bx	lr
 8000272:	bf00      	nop
 8000274:	40023830 	.word	0x40023830
 8000278:	40020000 	.word	0x40020000

0800027c <GPIOC_Init>:

void GPIOC_Init(uint32_t pin) {
 800027c:	b480      	push	{r7}
 800027e:	b083      	sub	sp, #12
 8000280:	af00      	add	r7, sp, #0
 8000282:	6078      	str	r0, [r7, #4]
	*RCC |= (1U << 2);
 8000284:	4b14      	ldr	r3, [pc, #80]	@ (80002d8 <GPIOC_Init+0x5c>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	4a13      	ldr	r2, [pc, #76]	@ (80002d8 <GPIOC_Init+0x5c>)
 800028a:	f043 0304 	orr.w	r3, r3, #4
 800028e:	6013      	str	r3, [r2, #0]

	GPIOC->MODER &= ~(1U << (2 * pin));
 8000290:	4b12      	ldr	r3, [pc, #72]	@ (80002dc <GPIOC_Init+0x60>)
 8000292:	681a      	ldr	r2, [r3, #0]
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	005b      	lsls	r3, r3, #1
 8000298:	2101      	movs	r1, #1
 800029a:	fa01 f303 	lsl.w	r3, r1, r3
 800029e:	43db      	mvns	r3, r3
 80002a0:	490e      	ldr	r1, [pc, #56]	@ (80002dc <GPIOC_Init+0x60>)
 80002a2:	4013      	ands	r3, r2
 80002a4:	600b      	str	r3, [r1, #0]
	GPIOC->OSPEEDR |= (1U << (2 * pin));
 80002a6:	4b0d      	ldr	r3, [pc, #52]	@ (80002dc <GPIOC_Init+0x60>)
 80002a8:	689a      	ldr	r2, [r3, #8]
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	005b      	lsls	r3, r3, #1
 80002ae:	2101      	movs	r1, #1
 80002b0:	fa01 f303 	lsl.w	r3, r1, r3
 80002b4:	4909      	ldr	r1, [pc, #36]	@ (80002dc <GPIOC_Init+0x60>)
 80002b6:	4313      	orrs	r3, r2
 80002b8:	608b      	str	r3, [r1, #8]
	GPIOC->PUPDR |= (2U << (2 * pin));
 80002ba:	4b08      	ldr	r3, [pc, #32]	@ (80002dc <GPIOC_Init+0x60>)
 80002bc:	68da      	ldr	r2, [r3, #12]
 80002be:	687b      	ldr	r3, [r7, #4]
 80002c0:	005b      	lsls	r3, r3, #1
 80002c2:	2102      	movs	r1, #2
 80002c4:	fa01 f303 	lsl.w	r3, r1, r3
 80002c8:	4904      	ldr	r1, [pc, #16]	@ (80002dc <GPIOC_Init+0x60>)
 80002ca:	4313      	orrs	r3, r2
 80002cc:	60cb      	str	r3, [r1, #12]
}
 80002ce:	bf00      	nop
 80002d0:	370c      	adds	r7, #12
 80002d2:	46bd      	mov	sp, r7
 80002d4:	bc80      	pop	{r7}
 80002d6:	4770      	bx	lr
 80002d8:	40023830 	.word	0x40023830
 80002dc:	40020800 	.word	0x40020800

080002e0 <main>:


int main(void)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	b086      	sub	sp, #24
 80002e4:	af00      	add	r7, sp, #0
	uint32_t pin1 = 5, pin2 = 13;
 80002e6:	2305      	movs	r3, #5
 80002e8:	60bb      	str	r3, [r7, #8]
 80002ea:	230d      	movs	r3, #13
 80002ec:	607b      	str	r3, [r7, #4]
	GPIOA_Init(pin1);
 80002ee:	68b8      	ldr	r0, [r7, #8]
 80002f0:	f7ff ff88 	bl	8000204 <GPIOA_Init>
	GPIOC_Init(pin2);
 80002f4:	6878      	ldr	r0, [r7, #4]
 80002f6:	f7ff ffc1 	bl	800027c <GPIOC_Init>

	uint32_t delay = 50u;
 80002fa:	2332      	movs	r3, #50	@ 0x32
 80002fc:	617b      	str	r3, [r7, #20]
    /* Loop forever */
	for(;;) {
		GPIOA->ODR |= (1U << pin1);
 80002fe:	4b27      	ldr	r3, [pc, #156]	@ (800039c <main+0xbc>)
 8000300:	695a      	ldr	r2, [r3, #20]
 8000302:	2101      	movs	r1, #1
 8000304:	68bb      	ldr	r3, [r7, #8]
 8000306:	fa01 f303 	lsl.w	r3, r1, r3
 800030a:	4924      	ldr	r1, [pc, #144]	@ (800039c <main+0xbc>)
 800030c:	4313      	orrs	r3, r2
 800030e:	614b      	str	r3, [r1, #20]
		for (uint32_t i = 0u; i < (50000 * delay); i++) {
 8000310:	2300      	movs	r3, #0
 8000312:	613b      	str	r3, [r7, #16]
 8000314:	e010      	b.n	8000338 <main+0x58>
			if (!(GPIOC->IDR & (1U << pin2))) {
 8000316:	4b22      	ldr	r3, [pc, #136]	@ (80003a0 <main+0xc0>)
 8000318:	691a      	ldr	r2, [r3, #16]
 800031a:	2101      	movs	r1, #1
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	fa01 f303 	lsl.w	r3, r1, r3
 8000322:	4013      	ands	r3, r2
 8000324:	2b00      	cmp	r3, #0
 8000326:	d102      	bne.n	800032e <main+0x4e>
				delay = 1u;
 8000328:	2301      	movs	r3, #1
 800032a:	617b      	str	r3, [r7, #20]
 800032c:	e001      	b.n	8000332 <main+0x52>
			} else {
				delay = 5u;
 800032e:	2305      	movs	r3, #5
 8000330:	617b      	str	r3, [r7, #20]
		for (uint32_t i = 0u; i < (50000 * delay); i++) {
 8000332:	693b      	ldr	r3, [r7, #16]
 8000334:	3301      	adds	r3, #1
 8000336:	613b      	str	r3, [r7, #16]
 8000338:	697b      	ldr	r3, [r7, #20]
 800033a:	f24c 3250 	movw	r2, #50000	@ 0xc350
 800033e:	fb02 f303 	mul.w	r3, r2, r3
 8000342:	693a      	ldr	r2, [r7, #16]
 8000344:	429a      	cmp	r2, r3
 8000346:	d3e6      	bcc.n	8000316 <main+0x36>
			}
		}

		delay = 5u;
 8000348:	2305      	movs	r3, #5
 800034a:	617b      	str	r3, [r7, #20]
		GPIOA->ODR &= ~(1U << pin1);
 800034c:	4b13      	ldr	r3, [pc, #76]	@ (800039c <main+0xbc>)
 800034e:	695a      	ldr	r2, [r3, #20]
 8000350:	2101      	movs	r1, #1
 8000352:	68bb      	ldr	r3, [r7, #8]
 8000354:	fa01 f303 	lsl.w	r3, r1, r3
 8000358:	43db      	mvns	r3, r3
 800035a:	4910      	ldr	r1, [pc, #64]	@ (800039c <main+0xbc>)
 800035c:	4013      	ands	r3, r2
 800035e:	614b      	str	r3, [r1, #20]
		for (uint32_t i = 0u; i < (50000 * delay); i++) {
 8000360:	2300      	movs	r3, #0
 8000362:	60fb      	str	r3, [r7, #12]
 8000364:	e010      	b.n	8000388 <main+0xa8>
			if (!(GPIOC->IDR & (1U << pin2))) {
 8000366:	4b0e      	ldr	r3, [pc, #56]	@ (80003a0 <main+0xc0>)
 8000368:	691a      	ldr	r2, [r3, #16]
 800036a:	2101      	movs	r1, #1
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	fa01 f303 	lsl.w	r3, r1, r3
 8000372:	4013      	ands	r3, r2
 8000374:	2b00      	cmp	r3, #0
 8000376:	d102      	bne.n	800037e <main+0x9e>
				delay = 1u;
 8000378:	2301      	movs	r3, #1
 800037a:	617b      	str	r3, [r7, #20]
 800037c:	e001      	b.n	8000382 <main+0xa2>
			} else {
				delay = 5u;
 800037e:	2305      	movs	r3, #5
 8000380:	617b      	str	r3, [r7, #20]
		for (uint32_t i = 0u; i < (50000 * delay); i++) {
 8000382:	68fb      	ldr	r3, [r7, #12]
 8000384:	3301      	adds	r3, #1
 8000386:	60fb      	str	r3, [r7, #12]
 8000388:	697b      	ldr	r3, [r7, #20]
 800038a:	f24c 3250 	movw	r2, #50000	@ 0xc350
 800038e:	fb02 f303 	mul.w	r3, r2, r3
 8000392:	68fa      	ldr	r2, [r7, #12]
 8000394:	429a      	cmp	r2, r3
 8000396:	d3e6      	bcc.n	8000366 <main+0x86>
		GPIOA->ODR |= (1U << pin1);
 8000398:	e7b1      	b.n	80002fe <main+0x1e>
 800039a:	bf00      	nop
 800039c:	40020000 	.word	0x40020000
 80003a0:	40020800 	.word	0x40020800

080003a4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003a4:	480d      	ldr	r0, [pc, #52]	@ (80003dc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003a6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003a8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003ac:	480c      	ldr	r0, [pc, #48]	@ (80003e0 <LoopForever+0x6>)
  ldr r1, =_edata
 80003ae:	490d      	ldr	r1, [pc, #52]	@ (80003e4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003b0:	4a0d      	ldr	r2, [pc, #52]	@ (80003e8 <LoopForever+0xe>)
  movs r3, #0
 80003b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003b4:	e002      	b.n	80003bc <LoopCopyDataInit>

080003b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003ba:	3304      	adds	r3, #4

080003bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003c0:	d3f9      	bcc.n	80003b6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003c2:	4a0a      	ldr	r2, [pc, #40]	@ (80003ec <LoopForever+0x12>)
  ldr r4, =_ebss
 80003c4:	4c0a      	ldr	r4, [pc, #40]	@ (80003f0 <LoopForever+0x16>)
  movs r3, #0
 80003c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003c8:	e001      	b.n	80003ce <LoopFillZerobss>

080003ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003cc:	3204      	adds	r2, #4

080003ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003d0:	d3fb      	bcc.n	80003ca <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003d2:	f000 f811 	bl	80003f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003d6:	f7ff ff83 	bl	80002e0 <main>

080003da <LoopForever>:

LoopForever:
  b LoopForever
 80003da:	e7fe      	b.n	80003da <LoopForever>
  ldr   r0, =_estack
 80003dc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003e4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80003e8:	08000460 	.word	0x08000460
  ldr r2, =_sbss
 80003ec:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80003f0:	2000001c 	.word	0x2000001c

080003f4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003f4:	e7fe      	b.n	80003f4 <ADC_IRQHandler>
	...

080003f8 <__libc_init_array>:
 80003f8:	b570      	push	{r4, r5, r6, lr}
 80003fa:	4d0d      	ldr	r5, [pc, #52]	@ (8000430 <__libc_init_array+0x38>)
 80003fc:	4c0d      	ldr	r4, [pc, #52]	@ (8000434 <__libc_init_array+0x3c>)
 80003fe:	1b64      	subs	r4, r4, r5
 8000400:	10a4      	asrs	r4, r4, #2
 8000402:	2600      	movs	r6, #0
 8000404:	42a6      	cmp	r6, r4
 8000406:	d109      	bne.n	800041c <__libc_init_array+0x24>
 8000408:	4d0b      	ldr	r5, [pc, #44]	@ (8000438 <__libc_init_array+0x40>)
 800040a:	4c0c      	ldr	r4, [pc, #48]	@ (800043c <__libc_init_array+0x44>)
 800040c:	f000 f818 	bl	8000440 <_init>
 8000410:	1b64      	subs	r4, r4, r5
 8000412:	10a4      	asrs	r4, r4, #2
 8000414:	2600      	movs	r6, #0
 8000416:	42a6      	cmp	r6, r4
 8000418:	d105      	bne.n	8000426 <__libc_init_array+0x2e>
 800041a:	bd70      	pop	{r4, r5, r6, pc}
 800041c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000420:	4798      	blx	r3
 8000422:	3601      	adds	r6, #1
 8000424:	e7ee      	b.n	8000404 <__libc_init_array+0xc>
 8000426:	f855 3b04 	ldr.w	r3, [r5], #4
 800042a:	4798      	blx	r3
 800042c:	3601      	adds	r6, #1
 800042e:	e7f2      	b.n	8000416 <__libc_init_array+0x1e>
 8000430:	08000458 	.word	0x08000458
 8000434:	08000458 	.word	0x08000458
 8000438:	08000458 	.word	0x08000458
 800043c:	0800045c 	.word	0x0800045c

08000440 <_init>:
 8000440:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000442:	bf00      	nop
 8000444:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000446:	bc08      	pop	{r3}
 8000448:	469e      	mov	lr, r3
 800044a:	4770      	bx	lr

0800044c <_fini>:
 800044c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800044e:	bf00      	nop
 8000450:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000452:	bc08      	pop	{r3}
 8000454:	469e      	mov	lr, r3
 8000456:	4770      	bx	lr
